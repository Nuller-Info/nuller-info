<!DOCTYPE html>

<!--
Trial-Auswertung
https://github.com/andreas-gruenbacher/trial-auswertung

Copyright 2012-2014  Andreas Gr체nbacher  <andreas.gruenbacher@gmail.com>
Lizenz: AGPLv3, http://www.gnu.org/licenses/agpl-3.0.html
-->

<html ng-app='application'>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <base href="/admin/">
    <title ng-bind="$root.titel">Trial-Auswertung</title>
    <style type="text/css">
      *
      {
      font-family:"Trebuchet MS", Arial, Helvetica, sans-serif;
      }

      body { background-color:white; }

      span.accesskey { text-decoration:underline; }
      .punktespalte { width:2em; }

      input, textarea, select, button { font-family:inherit; font-size:inherit; }

      textarea.ng-invalid.ng-dirty, input.ng-invalid.ng-dirty {
	color: #e00000;
	background-color: #fff0f0;
      }

      @media print {
	.no-print, .no-print * { display:none !important; }
	.page-break { page-break-before:always; }
      }
    </style>

    <script src="../js/angular.js"></script>
    <script src="../js/angular-route.js"></script>
    <script src="../js/angular-cookies.js"></script>
    <script src="../js/validate.js"></script>
    <script src="../js/json-diff.js"></script>
    <script src="directives.js"></script>
    <script src="api.js"></script>
    <script src="login/controller.js"></script>
    <script src="main/controller.js"></script>
    <script src="veranstaltung/controller.js"></script>
    <script src="nennungen/controller.js"></script>
    <script src="punkte/controller.js"></script>
    <script src="einstellungen/controller.js"></script>
    <script src="sektionen/controller.js"></script>
    <script src="veranstaltung/auswertung/controller.js"></script>
    <script src="veranstaltung/liste/controller.js"></script>
    <script src="vareihe/controller.js"></script>
    <script src="extern/controller.js"></script>
    <script src="sync/controller.js"></script>
    <script>

      var HAVE_WEASYPRINT;
<!--#if expr="$HAVE_WEASYPRINT = 1" -->
      HAVE_WEASYPRINT = true;
<!--#endif -->

      var SYNC_SOURCE;
<!--#if expr="$SYNC_SOURCE = 1" -->
      SYNC_SOURCE = true;
<!--#endif -->

      var SYNC_TARGET;
<!--#if expr="$SYNC_TARGET = 1" -->
      SYNC_TARGET = true;
<!--#endif -->

      var application = angular.module('application', ['ngRoute', 'ngCookies', 'ui.validate']);

      application.directive('isoDate', isoDateDirective);
      application.directive('isoTime', isoTimeDirective);
      application.directive('isoTimestamp', isoTimestampDirective);
      application.directive('numeric', numericDirective);
      application.directive('punkte', punkteDirective);
      application.directive('yesNoNull', yesNoNullDirective);
      application.directive('wertungsklasse', wertungsklasseDirective);
      application.directive('nullable', nullableDirective);

      application.directive('autofocus', autofocusDirective);
      application.directive('tabTo', tabTo);

      application.controller('loginController', loginController);
      application.controller('mainController', mainController);
      application.controller('veranstaltungController', veranstaltungController);
      application.controller('nennungenController', nennungenController);
      application.controller('einstellungenController', einstellungenController);
      application.controller('sektionenController', sektionenController);
      application.controller('veranstaltungAuswertungController', veranstaltungAuswertungController);
      application.controller('veranstaltungListeController', veranstaltungListeController);
      application.controller('vareiheController', vareiheController);
      application.controller('externController', externController);
      application.controller('syncController', syncController);

      application.factory('AuthService', function($http, $cookies, $rootScope, $q) {
	function store_login(username, password) {
	  $rootScope.authinfo = {
	    username: username,
	    password: password
	  };
	  var authinfo = btoa(username + ':' + password);
	  $http.defaults.headers.common.Authorization = 'Basic ' + authinfo;
	  $cookies.authinfo = authinfo;
	}

	return {
	  login: function(username, password) {
	    var config = {
	      headers: {
		Authorization: 'Basic ' + btoa(username + ':' + password)
	      }
	    };
	    var deferred = $q.defer();
	    $http.get('/api/null', config).
	      success(function(data, status) {
		if (status == 200) {
		  store_login(username, password);
		  deferred.resolve();
		} else
		  deferred.reject();
	      }).
	      error(function() {
		deferred.reject();
	      });
	    return deferred.promise;
	  },

	  logout: function() {
	    delete $rootScope.authinfo;
	    delete $http.defaults.headers.common.Authorization;
	    delete $cookies.authinfo;
	  },

	  logged_in: function() {
	    return 'authinfo' in $rootScope || 'authinfo' in $cookies;
	  },

	  verify_login: function() {
	    var deferred = $q.defer();
	    if ('authinfo' in $rootScope)
	      deferred.resolve();
	    else if ('authinfo' in $cookies) {
	      var split = atob($cookies.authinfo).split(':');
	      store_login(split[0], split[1]);

	      function success() {
		deferred.resolve();
	      }

	      var AuthService = this;
	      function error() {
		AuthService.logout();
		deferred.reject();
	      }

	      this.login(split[0], split[1]).
		then(success, error);
	    } else
	      deferred.reject();
	    return deferred.promise;
	  }
	};
      });

      application.config(function($routeProvider) {
	$routeProvider
	  .when('/login', {
	    titel: 'Anmeldung',
	    controller: 'loginController',
	    templateUrl: 'login/index.html',
	    hideMenus: true
	  }).when('/', {
	    titel: 'Trial-Auswertung',
	    controller: 'mainController',
	    templateUrl: 'main/index.html',
	    resolve: mainController.resolve,
	    hideMenus: true
	  }).when('/veranstaltung/:id', {
	    controller: 'veranstaltungController',
	    templateUrl: 'veranstaltung/index.html',
	    resolve: veranstaltungController.resolve
	  }).when('/veranstaltung/:id/nennungen', {
	    titel: 'Nennungen',
	    controller: 'nennungenController',
	    templateUrl: 'nennungen/index.html',
	    resolve: nennungenController.resolve,
	    reloadOnSearch: false
	  }).when('/veranstaltung/:id/punkte', {
	    titel: 'Punktevergabe',
	    controller: 'punkteController',
	    templateUrl: 'punkte/index.html',
	    resolve: punkteController.resolve,
	    reloadOnSearch: false
	  }).when('/veranstaltung/neu/einstellungen', {
	    controller: 'einstellungenController',
	    templateUrl: 'einstellungen/index.html',
	    resolve: einstellungenController.resolve
	  }).when('/veranstaltung/:id/einstellungen', {
	    titel: 'Einstellungen',
	    controller: 'einstellungenController',
	    templateUrl: 'einstellungen/index.html',
	    resolve: einstellungenController.resolve
	  }).when('/veranstaltung/:id/sektionen', {
	    titel: 'Sektionen aus der Wertung',
	    controller: 'sektionenController',
	    templateUrl: 'sektionen/index.html',
	    resolve: sektionenController.resolve
	  }).when('/veranstaltung/:id/auswertung', {
	    titel: 'Auswertung',
	    controller: veranstaltungAuswertungController,
	    templateUrl: 'veranstaltung/auswertung/index.html',
	    resolve: veranstaltungAuswertungController.resolve,
	    reloadOnSearch: false
	  }).when('/veranstaltung/:id/liste', {
	    titel: 'Fahrerliste',
	    controller: veranstaltungListeController,
	    templateUrl: 'veranstaltung/liste/index.html',
	    resolve: veranstaltungListeController.resolve,
	    reloadOnSearch: false
	  }).when('/vareihe/neu', {
	    controller: 'vareiheController',
	    templateUrl: 'vareihe/index.html',
	    resolve: vareiheController.resolve
	  }).when('/vareihe/:vareihe', {
	    controller: 'vareiheController',
	    templateUrl: 'vareihe/index.html',
	    resolve: vareiheController.resolve
	  }).when('/extern', {
	    controller: 'externController',
	    templateUrl: 'extern/index.html',
	    resolve: externController.resolve
	  }).when('/hilfe', {
	    templateUrl: 'hilfe/index.html',
	  }).otherwise({
	    redirectTo: '/login'
	  });
      });

      application.config(function($httpProvider) {
	$httpProvider.responseInterceptors.push(
	  function($location, $q) {
	    function success(response) {
	      return response;
	    }

	    function error(response) {
              if (response.status === 401) {
		$location.path('/login').replace();
	      }
	      return $q.reject(response);
            }

	    return function(promise) {
	      return promise.then(success, error);
	    };
	  }
	);
      });

      application.config(function($locationProvider) {
	$locationProvider.html5Mode(true);
      });

      application.run(function($rootScope, $route, $location, $http, AuthService) {
	$rootScope.kontext = function(kontext) {
	  var titel = [kontext];
	  if ($route.current.titel)
	    titel.push($route.current.titel);
	  $rootScope.titel = titel.join(' - ');
	};

	$rootScope.$on("$routeChangeSuccess", function() {
	  $rootScope.titel = $route.current.titel || '';
	});

	$rootScope.join = join;

	$rootScope.$on('$routeChangeStart', function(event, next) {
	  function success() {
	  }

	  function error() {
	    /* preventDefault() funktioniert erst in neueren Angular-Versionen: */
	    event.preventDefault();
	    $rootScope.$evalAsync(function () {
	      $location.path('/login').replace();
	    });
	  }

	  /* Redirect to login page if not logged in or login no longer valid. */
	  if ($location.path() !== '/login') {
	    AuthService.verify_login().
	      then(success, error);
	  }
        });

	/* Wenn wir uns auf verify_login() von oben verlassen, ist das aus
	   irgend einem Grund zu sp채t; mit neueren Versionen von Angular
	   solte der logged_in()-Check aber 체berfl체ssig werden: */
	if ($location.path() !== '/login' && !AuthService.logged_in()) {
	  $location.path('/login').replace();
	}
      });
    </script>
  </head>
  <body>
    <div style="position:fixed; top:0px; right:1em" ng-controller="syncController" class="no-print">
      <p style="font-weight:bold; text-align:right; background-color:#FFFFE0; padding:0.5em; padding-left:1em; padding-right:1em; border:solid 1px" ng-if="visible">
	{{titel}} <span ng-bind-html="zustand()"></span>
	<button ng-click="close()" tabindex="-1" ng-if="running">Beenden</button>
	<button ng-click="start()" tabindex="-1" ng-if="!running">Neustart</button>
	<span ng-if="source_error"><br>{{source_error}}</span>
	<span ng-if="target_error"><br>{{target_error}}</span>
      </p>
    </div>
    <div ng-view>
    </div>
  </body>
</html>
