Erweiterungen zum Trialtool
===========================

Diese Erweiterungen zum Programm Trialtool von Ortwin Sann [1] bieten folgenden
Möglichkeiten:

 * Einlesen der Konfiguration und der Fahrerdaten (den *.cfg und *.dat -
   Dateien des Trialtools).

 * Erstellung einer Tageswertung einer Veranstaltung aus den Trialtool-Dateien.
   Die Ausgabe erfolgt als Text oder HTML.

 * Erstellung einer Jahreswertung über mehrere Veranstaltungen aus den
   Trialtool-Dateien.  Die Ausgabe erfolgt als Text oder HTML.

 * Import der Daten in eine Datenbank (z.B. ODBC, MySQL, PostgreSQL), entweder
   einmalig oder fortlaufend.  Bei fortlaufendem Import werden immer nur die
   Änderungen in die Datenbank geschrieben.

 * Anzeige der Daten aus der Datenbank über CGI-Scripts und einen Web-Server
   als Tageswertung, Jahreswertung, oder als Punktestatistik.  Die dabei
   generierten Seiten sind recht leicht und flexibel anpassbar.

 * Erzeugen von *.cfg und *.dat - Dateien aus der Datenbank.

 * Konsistenzprüfung der Daten für den ÖTSV.

Diese Erweiterungen sind unabhängig vom Trialtool selbst; das Trialtool selbst
muss nicht angepasst werden.

Die Scripts wurden unter Linux entwickelt, und unter Linux und Windows Vista
getestet.  Serverseitig war bisher der HTTP-Server Apache und die Datenbank
MySQL im Einsatz.  Andere Umgebungen können mehr oder weniger umfangreiche
Anpassungsarbeiten erfordern.


Systemvoraussetzungen
---------------------

 * Die Scriptsprache Perl.  Eine kostenlose Version für Windows mit dem Namen
   ActivePerl gibt es von der Firma ActiveState [2].

   Für den Datenbank-Import braucht es je nach verwendeter Datenbank
   unterschiedliche Datenbanktreiber, die möglicherweise zusätzlich installiert
   werden müssen (für MySQL unter ActivePerl: "ppm install DBD-mysql").

 * Die HTML-Seiten werden auf dem Web-Server über Server-Side Include - Dateien
   erzeugt (*.shtml).  Das unterstützt z.B. der Apache Web-Server.


Installation
------------

Einige der Scripts sind direkt von der Kommandozeile verwendbar. Diese Scripts
erfordern keine besondere Konfiguration oder Installation; die notwendigen
Parameter werden auf der Kommandozeile übergeben.

Wenn eine Datenbank verwendet werden soll, sind die nötigen Schritte unter dem
Punkte Datenbank-Konfiguration beschrieben.

Wenn die CGI-Scripts werwendet werden sollen, sind die nötigen Schritte unter
Web Server-Konfiguration beschrieben.


Datenbank - Konfiguration
-------------------------

Die verwendete Datenbankschnittstelle ist Perl's DBI, das viele Datenbanken
unterstützt.  In den Scripts wird recht einfacher SQL-Code verwendet, sodass
hoffentlich einige Datenbanken damit umgehen können.  Momentan ist aber nur
MySQL gestestet.

Es ist zu beachten, dass die Synchronisation in die Datenbank (db-sync)
Datenbank-Transaktionen voraussetzt.  Das können fast alle Datenbanken.

Bei MySQL ist aber wichtig, dass eine transaktionsfähige Datenbank-Engine
verwendet wird (z.B. InnoDB, nicht MyISAM).  Ist das nicht der Fall, kann es
bei Ereignissen wie Verbindungsabbruch bei der Datenübertragung zu
Inkonsistenzen kommen.


Datenmodell
-----------

Die anfängliche Datenbankstruktur lässt sich mit "db-sync --create-tables"
erzeugen.  Danach müssen die entsprechenden Veranstaltungsreihen und
Wertungsreihen definiert werden, siehe dazu die Tabellen vareihe, wereihe, und
wereihe_klasse:

 * Eine Veranstaltungsreihe zeichnet sich dadurch aus, dass es eine
   oder mehrere Gesamtwertungen über die Veranstaltungen in der Reihe gibt.

 * Eine Wertungsreihe ist eine solche Gesamtwertung.  Sie bezieht sich auf
   bestimmte Klassen in den Veranstaltungen einer Veranstaltungsreihe und hat
   eine definierte Anzahl an Läufen und Streichresultaten.

Das verwendete Datenmodell in der Datenbank ist in der Datei
doc/eer-diagramm.pdf dargestellt.  Das Diagramm wurde mit MySQL Workbench
erstellt.  Das Diagramm muss nicht immer ganz aktuell sein; im Zweifelsfall
schadet ein Blick auf die Definitionen der Tabellen in db-sync.pl nicht.


Web Server - Konfiguration
--------------------------

Die Dateien im Verzeichnis "htdocs" müssen in einem Dokumentenverzeichnis
liegen; die Dateien im Verzeichnis "cgi-bin" in einem Verzeichnis, in dem der
Web Server CGI-Scripts ausführen darf.

Die *.shtml - Dateien müssen vom Web Server als Server Side Include-Dateien
(SSI) verarbeitet werden.

  Beispielkonfiguration für Apache:

    ScriptAlias /cgi-bin/ergebnisse /home/agruen/trial-toolkit/cgi-bin
    Alias /ergebnisse /home/agruen/trial-toolkit/htdocs

    <Directory "/home/agruen/trial-toolkit/htdocs">
	Options Indexes
	AllowOverride All
	Order allow,deny
	Allow from all
    </Directory>

    <Directory "/home/agruen/trial-toolkit/cgi-bin">
	SetHandler cgi-script
	Options ExecCGI
    </Directory>

  Im Verzeichnis "htdocs" befindet sich eine passende ".htaccess" - Datei mit:

    DirectoryIndex index.shtml
    Options Indexes Includes

  Achtung: der Alias "/ergebnisse" muss in der Konfiguration vor dem Alias "/"
  stehen.

Das Veranstalter-Verzeichnis ist so konfiguriert, dass es nur authorisierten
Benutzern Zugriff gestattet.  Dazu muss noch zusätzlich eine .htpasswd - Datei
erzeugt werden, und der Pfad zu dieser Datei in die .htaccess - Dateien
eingetragen werden.

Außerdem muss in der Datei trial-toolkit/TrialToolkit.pm definiert werden, auf
welche Datenbank die CGI-Scripts mit welchem Benutzernamen und Kennwort
zugreifen sollen.


Beispiele zur Verwendung
------------------------

 Tageswertung für eine Veranstaltung als Text auf den Bildschirm, und als
 HTML in eine Datei:

    tageswertung.pl "2012-04-22 Steinbach ÖTSV + OSK.cfg"

    tageswertung.pl --html "2012-04-22 Steinbach ÖTSV + OSK.cfg" \
	> tageswertung.html


 Jahreswertung für alle Veranstaltungen in 2012:

    jahreswertung.pl 2012-*

    jahreswertung.pl --html 2012-* > jahreswertung.html


 Die ÖTSV-Konventionen in den Daten einer Veranstaltung überprüfen:

    otsv-check.pl "2012-04-22 Steinbach ÖTSV + OSK.cfg"


 Die ÖTSV-Konventionen in der aktuellen Veranstaltung überprüfen:

    otsv-check.pl "C:\TrialTool 3.12"


 In der MySQL-Datenbank "datenbank" die Tabellen für den Import erzeugen
 (Achtung: bestehende Daten gehen ohne Nachfrage verloren!)

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... \
	--create-tables


 Einmaliger Import der Daten von 2012 in die Datenbank:

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... \
	2012-*


 Neuimport der kompletten Daten von 2012 erzwingen:

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... \
	--force \
	2012-*


 Löschen einer Veranstaltung aus der Datenbank:

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... --delete \
	"2012-04-22 Steinbach ÖTSV + OSK.cfg"


 Kontinuierlicher Import der Daten einer Veranstaltung in die Datenbank,
 per Default alle 30 Sekunden, mit erneutem Verbindungsaufbau, falls die
 Verbindung zur Datenbank abreißt:

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... \
	--poll --reconnect \
	"2012-04-22 Steinbach ÖTSV + OSK.cfg"


Jahreswertung und Startnummernänderungen
----------------------------------------

Es kommt manchmal vor, dass sich die Startnummer eines Fahrers zwischen
Wettbewerben ändert.  Das ist für die Jahreswerung ein Problem, die über die
Startnummer geht.  Es wäre möglich, die Startnummern in den einzelnen
Veranstaltungen nachträglich abzupassen, das würde aber auch die Ergebislisten
verändern.  Stattdessen gibt es die Möglichkeit, Startnummern nur für die
Jahreswertung umzuschreiben:

Um die Jahreswertung direkt aus den TrialTool-Dateien zu erstellen, schreibt
man irgendwo in das Bemerkung-Feld in den Fahrerstammdaten den Code *SN:987*
(wobei 987 durch die Startnummer in der Jahreswertung ersetzt wird).

Um die Jahreswertung aus der Datenbank zu erstellen, definiert man die
Startnummernänderungen in der Tabelle neue_startnummer.  Wenn die
TrialTool-Dateien *SN:987* - Codes enthalten, werden diese beim Import
automatisch übernommen.


Reihung in der Jahreswertung
----------------------------

Fahrer werden zunächst anhand ihrer Gesamtpunkteanzahl gereiht, wobei die
Punkte aus Streichresultaten abgezogen sind.

Bei gleichem Punktestand werden alle erzielten Ergebnisse inklusive der
Streichresultate verglichen.  Der Fahrer mit mehr guten Platzierungen, also mit
mehr ersten Plätzen, oder mit mehr zweiten Plätzen bei gleicher Anzahl erster
Plätze, usw., gewinnt.

Danach gewinnt der Fahrer mit mehr Streichpunkten.

Wenn danach immer noch Gleichstand herrscht, werden beide Fahrer momentan
gleich gereiht.


Lizenz
------

Dieser Text und die Programme stehen under der GNU Affero General Public License
Version 3, http://www.gnu.org/licenses/agpl-3.0.html.


Referenzen
----------

[1] http://www.ortwinsann.de/trialtool/
[2] http://www.activestate.com/activeperl
