Erweiterungen zum Trialtool
===========================

Diese Erweiterungen zum Programm Trialtool von Ortwin Sann [1] bieten folgenden
Möglichkeiten:

 * Erstellung einer Tageswertung einer Veranstaltung aus den Trialtool-Dateien.
   Die Ausgabe erfolgt als Text oder HTML.

 * Erstellung einer Jahreswertung über mehrere Veranstaltungen aus den
   Trialtool-Dateien.  Die Ausgabe erfolgt als Text oder HTML.

 * Import der Trialtool-Daten in eine Datenbank (z.B. ODBC, MySQL, PostgreSQL),
   entweder einmalig oder fortlaufend.  Bei fortlaufendem Import werden immer
   nur die Änderungen in die Datenbank geschrieben.

 * Anzeige der Daten aus der Datenbank über CGI-Scripts und einen Web-Server
   als Tageswertung, Jahreswertung, oder als Punktestatistik.  Die dabei
   generierten Seiten sind recht leicht und flexibel anpassbar.

 * Administration der Datenbank über Web-Formulare (ahnlich den Formularen im
   Trialtool).

 * Export von Trialtool-Dateien aus der Datenbank.

 * Konsistenzprüfung der Daten für den ÖTSV.

Diese Erweiterungen sind unabhängig vom Trialtool selbst; das Trialtool selbst
ist für die Benützung nicht erforderlich.

Die wesentlichen Einschränkungen, die das Trialtool mit sich bringt (Begrenzung
auf höchstens 4 Wertungen, 5 Runden, 15 Sektionen, 15 Klassen) wurden bisher
nicht aufgehoben.  Außerdem fehlen viele Listen und Ergebnisformate, die oft
hilfreich wären.  Eine Verwaltung von Helfern existiert bisher ebenfalls
nicht.

Die Scripts wurden unter Linux entwickelt und unter Linux und Windows Vista
getestet.  Serverseitig war bisher der HTTP-Server Apache und die Datenbank
MySQL im Einsatz.  Andere Umgebungen können mehr oder weniger umfangreiche
Anpassungsarbeiten erfordern.


Systemvoraussetzungen
---------------------

 * Die Scriptsprache Perl.  Eine kostenlose Version für Windows mit dem Namen
   ActivePerl gibt es von der Firma ActiveState [2].

   Für den Datenbank-Import braucht es je nach verwendeter Datenbank
   unterschiedliche Datenbanktreiber, die möglicherweise zusätzlich installiert
   werden müssen (für MySQL unter ActivePerl: "ppm install DBD-mysql").

 * Die Perl-Module CGI und JSON (auf RPM-basierten Linux-Systemen oft mit "yum
   install perl-CGI perl-JSON" zu installieren).
   + perl-Clone
   + perl-URI-Escape oder perl-Any-URI-Escape + perl-URI-Escape-XS
   + perl-Class-Accessor-Lite
   + perl-Module-Load
   + perl-Module-Loaded

 * Die HTML-Seiten werden auf dem Web-Server über Server-Side Include - Dateien
   erzeugt (*.shtml).  Das unterstützt z.B. der Apache Web-Server.


Installation
------------

Einige der Scripts sind direkt von der Kommandozeile verwendbar. Diese Scripts
erfordern keine besondere Konfiguration oder Installation; die notwendigen
Parameter können auf der Kommandozeile übergeben werden.

Wenn eine Datenbank verwendet werden soll, sind die nötigen Schritte unter dem
Punkt Datenbank-Konfiguration beschrieben.

Wenn die CGI-Scripts werwendet werden sollen, sind die nötigen Schritte unter
dem Punkt Web Server-Konfiguration beschrieben.


Konfiguration
-------------

Die Scripts lassen sich über die Datei lib/Auswertung.pm konfigurieren.  Die
Einstellungen dort betreffen Dinge wir den Datenbankzugang (nur benötigt, wenn
eine Datenbank eingesetzt wird) und die Spurfarben der einzelnen Klassen.
Viele dieser Einstellungen können auch auf der Kommandozeile vorgenommen oder
überschrieben werden.

Achtung: Diese Datei muss per Hand erzeugt werden, teilweise BEVOR DIE SCRIPTS
VERWENDET WERDEN KÖNNEN.  Eine Vorlage dafür befindet sich in der Datei
lib/Auswertung.pm.txt.


Administration
--------------

Über die Administrations-Formulare im Pfad admin/ relativ zur URL, über die
Veranstaltungsübersicht erreichbar ist, lassen sich folgende Dinge
konfigurieren:

 * Anlegen, Ändern und Löschen von Veranstaltungen.  Konfigurieren von
   Veranstaltungen (Wertungen, Klassen, befahrene Sektionen, Felder im
   Nennformular usw.).

 * Anlegen und Ändern von Fahrern, Zuweisen von Startnummern, Auswahl der
   Starter einer Veranstaltung.

 * Erfassung oder Änderung der Ergebnisse einer Veranstaltung (Punkte, Ausfall,
   Stechen, Start- und Zielzeit).

 * Definition von Veranstaltungsserien (enthaltene Veranstaltungen und Klassen,
   Startnummernänderungen zwischen Veranstaltungen).


Datenbank - Konfiguration
-------------------------

Die verwendete Datenbankschnittstelle ist Perl's DBI, das viele Datenbanken
unterstützt.  In den Scripts wird recht einfacher SQL-Code verwendet, sodass
hoffentlich einige Datenbanken damit umgehen können.  Momentan ist aber nur
MySQL gestestet.

Es ist zu beachten, dass die Synchronisation in die Datenbank (db-sync.pl)
Datenbank-Transaktionen voraussetzt.  Das können fast alle Datenbanken.

Bei MySQL ist wichtig, dass eine transaktionsfähige Datenbank-Engine verwendet
wird (z.B. InnoDB, nicht aber MyISAM).  Ist das nicht der Fall, kann es bei
Ereignissen wie Verbindungsabbruch bei der Datenübertragung zu Inkonsistenzen
kommen.


  Beispiel
  --------

  $ mysqladmin --user=root password
  New password: 
  Confirm new password: 

  $ mysql --user=root --password
  Enter password: 
  > CREATE DATABASE trials CHARACTER SET utf8;
  > CREATE USER 'admin'@'localhost' IDENTIFIED BY 'password';
  > CREATE USER 'admin'@'%' IDENTIFIED BY 'password';
  > GRANT ALL PRIVILEGES ON trials.* TO 'admin'@'%';


Datenmodell
-----------

Die anfängliche Datenbankstruktur lässt sich mit "db-sync --create-tables"
erzeugen.  Danach müssen die entsprechenden Veranstaltungsreihen definiert
werden:

  Eine Veranstaltungsreihe fasst einzelne Veranstaltungen zusammen, entweder um
  sie auflisten zu können (z.B. alle Fahrrad- und Motorrad-Veranstaltungen im
  Jahr 2012), oder um eine Gesamtwertung zu definieren.  Für eine Gesamtwertung
  definiert die Tabelle vareihe_klasse die in der Gesamtwertung enthaltenen
  Klassen und die Anzahl der Läufe und Streichresultate.

Das geht am einfachsten über die Administrations-Formulare.

Das verwendete Datenmodell kann man dem Script db-sync.pl entnehmen.

  Beispiel
  --------
  $ ./db-sync.pl --db='mysql:trials;host=localhost' \
		 --user=admin \
		 --password=password \
		 --create-tables


Web Server - Konfiguration
--------------------------

Die Dateien im Verzeichnis "htdocs" müssen in einem Dokumentenverzeichnis
liegen; die Dateien im Verzeichnis "cgi-bin" in einem Verzeichnis, in dem der
Web Server CGI-Scripts ausführen darf.

Die *.shtml - Dateien müssen vom Web Server als Server Side Include-Dateien
(SSI) verarbeitet werden.

  Beispielkonfiguration für Apache:

    ScriptAlias /cgi-bin/ergebnisse /home/agruen/trial-auswertung/cgi-bin
    Alias /ergebnisse /home/agruen/trial-auswertung/htdocs

    <Directory "/home/agruen/trial-auswertung/htdocs">
	AllowOverride All
	Order allow,deny
	Allow from all
    </Directory>

    <Directory "/home/agruen/trial-auswertung/cgi-bin">
	SetHandler cgi-script
	Options ExecCGI
    </Directory>

  Im Verzeichnis "htdocs" befindet sich eine passende ".htaccess" - Datei mit:

    DirectoryIndex index.shtml
    Options +Includes

  Achtung: der Alias "/ergebnisse" muss in der Konfiguration vor dem Alias "/"
  stehen.

Die Verzeichnisse htdocs/veranstalter/ und cgi-bin/veranstalter/ geben Zugriff
auf Funktionen, die üblicherweise nicht öffentlich zugänglich sein sollen.
Standardmäßig ist der Zugriff auf authorisierte Benutzer eingeschränkt.  Um
Benutzer zu definieren, muss noch zusätzlich eine .htpasswd - Datei erzeugt
werden und der Pfad zu dieser Datei in die .htaccess - Dateien eingetragen
werden.

Die Verzeichnisse htdocs/admin/ und cgi-bin/api/ geben Zugriff auf die
Datenbank-Administration.  Standardmäßig hat hier nur der Benutzer "admin"
Zugriff; dieser Benutzer muss zuerst in der Datei .htpasswd angelegt werden.

Außerdem muss in der Datei lib/Auswertung.pm definiert werden, auf welche
Datenbank die CGI-Scripts mit welchem Benutzernamen und Kennwort zugreifen
sollen (siehe auch Punkt Konfiguration weiter oben).


Beispiele zur Verwendung
------------------------

 Tageswertung für eine Veranstaltung als Text auf den Bildschirm, und als
 HTML in eine Datei:

    tageswertung.pl "2012-04-22 Steinbach ÖTSV + OSK.cfg"

    tageswertung.pl --html "2012-04-22 Steinbach ÖTSV + OSK.cfg" \
	> tageswertung.html


 Jahreswertung für alle Veranstaltungen in 2012:

    jahreswertung.pl 2012-*

    jahreswertung.pl --html 2012-* > jahreswertung.html


 In der MySQL-Datenbank "datenbank" die Tabellen für den Import erzeugen
 (Achtung: bestehende Daten gehen ohne Nachfrage verloren!)

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... \
	--create-tables

 Wenn die Datenbank nicht explizit angegeben wird, wird auf die in
 lib/Auswertung.pm definierte Datenbank zugegriffen.


 Einmaliger Import der Daten von 2012 in die Datenbank:

    db-sync.pl 2012-*


 Neuimport der kompletten Daten von 2012 erzwingen:

    db-sync.pl --force 2012-*


 Kontinuierlicher Import der Daten einer Veranstaltung in die Datenbank,
 per Default alle 30 Sekunden, mit erneutem Verbindungsaufbau, falls die
 Verbindung zur Datenbank abreißt:

    db-sync.pl --poll --reconnect \
	"2012-04-22 Steinbach ÖTSV + OSK.cfg"


 Die Veranstaltungen in der Datenbank auflisten (mit ihren IDs):

    db-export.pl --list


 Die Daten einer Veranstaltung über ihre ID aus der Datenbank exportieren:

    db-export.pl 4711


 Löschen einer Veranstaltung aus der Datenbank (über Dateiname oder ID):

    db-sync.pl --delete \
	"2012-04-22 Steinbach ÖTSV + OSK.cfg"
    db-sync.pl --delete-id 4711


Bundesland
----------

In der Datenbank gibt es zusätzlich für Fahrer ein Feld für das Bundesland.  Da
das Trialtool dieses Feld nicht unterstützt, steht stattdessen im
Bemerkung-Feld der Code *BL:xxx* mit dem entsprechenden Bundesland anstelle von
xxx.


Jahreswertung und Startnummern-Änderungen, Wertungspunkte ignorieren
--------------------------------------------------------------------

Es kommt manchmal vor, dass sich die Startnummer eines Fahrers zwischen
Wettbewerben ändert.  Das ist für die Jahreswerung ein Problem, die die
Startnummer als Schlüssel verwendet.  Es wäre möglich, die Startnummern in den
einzelnen Veranstaltungen nachträglich anzupassen, das würde aber auch die
Ergebislisten der einzelnen Veranstaltungen verändern.  Stattdessen gibt es die
Möglichkeit, Startnummern nur für die Jahreswertung umzuschreiben:

Soll die Jahreswertung direkt aus den TrialTool-Dateien erstellt werden,
schreibt man in das Bemerkung-Feld der Fahrerstammdaten den Code *JW:987*
(wobei 987 durch die Startnummer in der Jahreswertung ersetzt wird).

Soll die Jahreswertung nur aus der Datenbank erstellt werden, definiert man die
Startnummernänderungen in der Tabelle neue_startnummer.  Wenn die
TrialTool-Dateien bereits die *JW:987* - Codes enthalten, werden diese beim
Import und Export berücksichtigt, und die Tabelle wird automatisch befüllt.

Wenn der Code *JW:* verwendet wird (also ohne Startnummer) oder das Feld
neue_startnummer in der Datenbank auf NULL gestezt ist, wird das
Veranstaltungsergebnis des Fahrers in der Jahreswertung nicht berücksichtigt.
Das kann sinnvoll sein, wenn ein Fahrer durch Klassenwechsel seine bisherigen
Wertungspunkte verlieren soll.


Reihung der Jahreswertung
-------------------------

Fahrer werden zunächst anhand ihrer Gesamtpunkteanzahl gereiht, wobei die
Punkte aus Streichresultaten abgezogen sind.

Bei gleichem Punktestand werden alle erzielten Ergebnisse inklusive der
Streichresultate verglichen.  Der Fahrer mit mehr guten Platzierungen, also mit
mehr ersten Plätzen, oder mit mehr zweiten Plätzen bei gleicher Anzahl erster
Plätze, usw., gewinnt.

Danach gewinnt der Fahrer mit mehr Streichpunkten.

Wenn danach immer noch Gleichstand herrscht, werden beide Fahrer momentan
gleich gereiht.


WeasyPrint
==========

WeasyPrint Wird verwendet, um am Server HTML nach PDF zu konvertieren.
Weasyprint ist zwar speziell für die Ergebnislisten mit ihren großen Tabellen
sehr langsam, dafür erzeugt es aber einen ordentlichen Seitenumbruch, was z.B.
WebKit-basierte Lösungen wie wkhtmltopdf nur sehr mangelhaft beherrschen.

  yum install weasyprint


Lizenz
------

Dieser Text und die Programme stehen under der GNU Affero General Public License
Version 3, http://www.gnu.org/licenses/agpl-3.0.html.


Referenzen
----------

[1] http://www.ortwinsann.de/trialtool/
[2] http://www.activestate.com/activeperl
