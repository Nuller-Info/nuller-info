Trial-Auswertung
================

Dieses Auswertungssystem für Motorrad- und Fahrrad-Trial-Wettbewerbe
unterstützt alle wesentlichen Schritte zur Verwaltung von Veranstaltungen
(Nennung, Punktevergabe, Erstellung von Listen, Auswertungen) und zur
Erstellung von Gesamtwertungen über mehrere Veranstaltungen.

Folgende Funktionen werden unterstützt:

 * Anlegen, Ändern und Löschen von Veranstaltungen.  Konfigurieren von
   Veranstaltungen (Wertungen, Klassen, befahrene Sektionen, usw.).

 * Anlegen und Ändern von Fahrern, Zuweisen von Startnummern, Auswahl der
   Starter einer Veranstaltung.

 * Erfassung der Ergebnisse der Starter (Punkte, Ausfall, Stechen, Start- und
   Zielzeit).

 * Definition von Veranstaltungsreihen (enthaltene Veranstaltungen und Klassen,
   Anzahl der Läufe und Streichresultate, Startnummernänderungen zwischen
   Veranstaltungen).

 * Import von und Export auf Dateien. Import vom und Export in das TrialTool.

 * Import direkt von einem Server. Laufende Synchronisierung auf einen Server.

 * Präsentationsmodus (für einen externen Bildschirm).

Das System ist komplett über einen Web-Browser bedienbar.  Es kann auch von
mehreren Geräten aus gleichzeitig verwendet werden. Wird dabei versucht, die
selben Daten mehrfach zu verändern, dann werden diese Konflikte erkannt, und es
kommt zu Fehlermeldungen

Die Entwicklung und der Test erfolgten unter Linux. Serverseitig wird der
HTTP-Server Apache und die Datenbank MySQL oder MariaDB verwendet.  Die
Bedienung ist von jedem Betriebssystem aus möglich.

Es gibt die Möglichkeit, Daten vom TrialTool von Ortwin Sann [1] zu importieren
bzw. in dieses Format zu exportieren.


Systemvoraussetzungen
---------------------

 * Ein einigermaßen aktuelles Linux-System.  (Dieses System kann auch
   innerhalb einer virtuellen Maschine laufen.)

 * Die Scriptsprache Perl. Zusätzlich folgende Pakete oder Perl-Module:
   perl-DBD-MySQL, perl-CGI, perl-JSON, perl-Clone, perl-URI-Escape oder
   perl-Any-URI-Escape + perl-URI-Escape-XS, perl-Class-Accessor-Lite,
   perl-Module-Load, perl-Module-Loaded, perl-Encode-Locale.

 * Die Datenbank MySQL (bzw. MariaDB).

 * Den Apache Web-Server.


Konfiguration
-------------

Die Scripts lassen sich über die Datei lib/Auswertung.pm konfigurieren.  Die
Einstellungen dort betreffen Dinge wir den Datenbankzugang.  Bei den Scripts,
die direkt aufgerufen werden können, können viele dieser Einstellungen auch auf
der Kommandozeile vorgenommen oder überschrieben werden.

Achtung: Diese Datei lib/Auswertung.pm muss per Hand erzeugt werden, teilweise
BEVOR DIE SCRIPTS VERWENDET WERDEN KÖNNEN.  Eine Vorlage dafür befindet sich in
der Datei lib/Auswertung.pm.txt.


Administration
--------------

Über die Veranstaltungsverwaltung im Pfad /admin/ werden die Veranstaltungen
und Veranstaltungsreihen definiert und verwaltet.


Datenbank - Konfiguration
-------------------------

In MySQL ist wichtig, dass eine transaktionsfähige Datenbank-Engine verwendet
wird (InnoDB, nicht MyISAM).


  Beispiel
  --------

  $ mysqladmin --user=root password
  New password: 
  Confirm new password: 

  $ mysql --user=root --password
  Enter password: 
  > CREATE DATABASE trials CHARACTER SET utf8;
  > CREATE USER 'admin'@'localhost' IDENTIFIED BY 'password';
  > CREATE USER 'admin'@'%' IDENTIFIED BY 'password';
  > GRANT ALL PRIVILEGES ON trials.* TO 'admin'@'%';


Die anfängliche Datenbankstruktur lässt sich mit "db-sync --create-tables"
erzeugen.


  Beispiel
  --------
  $ ./db-sync.pl --db='mysql:trials;host=localhost' \
		 --user=admin \
		 --password=password \
		 --create-tables


Web Server - Konfiguration
--------------------------

Die Dateien im Verzeichnis "htdocs" müssen in einem Dokumentenverzeichnis
liegen; die Dateien im Verzeichnis "cgi-bin" in einem Verzeichnis, in dem der
Web Server CGI-Scripts ausführen darf.

Die *.shtml - Dateien müssen vom Web Server als Server Side Include-Dateien
(SSI) verarbeitet werden.

  Beispielkonfiguration für Apache:

    ScriptAlias /cgi-bin/ergebnisse /home/agruen/trial-auswertung/cgi-bin
    Alias /ergebnisse /home/agruen/trial-auswertung/htdocs

    <Directory "/home/agruen/trial-auswertung/htdocs">
	AllowOverride All
	Order allow,deny
	Allow from all
    </Directory>

    <Directory "/home/agruen/trial-auswertung/cgi-bin">
	SetHandler cgi-script
	Options ExecCGI
    </Directory>

  Im Verzeichnis "htdocs" befindet sich eine passende ".htaccess" - Datei mit:

    DirectoryIndex index.shtml
    Options +Includes

  Achtung: der Alias "/ergebnisse" muss in der Konfiguration vor dem Alias "/"
  stehen.

Die Verzeichnisse htdocs/veranstalter/ und cgi-bin/veranstalter/ geben Zugriff
auf Funktionen, die üblicherweise nicht öffentlich zugänglich sein sollen.
Standardmäßig ist der Zugriff auf authorisierte Benutzer eingeschränkt.  Um
Benutzer zu definieren, muss noch zusätzlich eine .htpasswd - Datei erzeugt
werden und der Pfad zu dieser Datei in die .htaccess - Dateien eingetragen
werden.

Die Verzeichnisse htdocs/admin/ und cgi-bin/api/ geben Zugriff auf die
Datenbank-Administration.  Standardmäßig hat hier nur der Benutzer "admin"
Zugriff; dieser Benutzer muss zuerst in der Datei .htpasswd angelegt werden.

Außerdem muss in der Datei lib/Auswertung.pm definiert werden, auf welche
Datenbank die CGI-Scripts mit welchem Benutzernamen und Kennwort zugreifen
sollen (siehe auch Punkt Konfiguration weiter oben).


Kommandozeilen-Scripts
----------------------

 Tageswertung für eine Veranstaltung als Text auf den Bildschirm, und als
 HTML in eine Datei:

    tageswertung.pl "2012-04-22 Steinbach ÖTSV + OSK.cfg"

    tageswertung.pl --html "2012-04-22 Steinbach ÖTSV + OSK.cfg" \
	> tageswertung.html


 Jahreswertung für alle Veranstaltungen in 2012:

    jahreswertung.pl 2012-*

    jahreswertung.pl --html 2012-* > jahreswertung.html


 In der MySQL-Datenbank "datenbank" die Tabellen für den Import erzeugen
 (Achtung: bestehende Daten gehen ohne Nachfrage verloren!)

    db-sync.pl --db='mysql:datenbank' \
	--username=... --password=... \
	--create-tables

 Wenn die Datenbank nicht explizit angegeben wird, wird auf die in
 lib/Auswertung.pm definierte Datenbank zugegriffen.


 Einmaliger Import der Daten von 2012 in die Datenbank:

    db-sync.pl 2012-*


 Neuimport der kompletten Daten von 2012 erzwingen:

    db-sync.pl --force 2012-*


 Kontinuierlicher Import der Daten einer Veranstaltung in die Datenbank,
 per Default alle 30 Sekunden, mit erneutem Verbindungsaufbau, falls die
 Verbindung zur Datenbank abreißt:

    db-sync.pl --poll --reconnect \
	"2012-04-22 Steinbach ÖTSV + OSK.cfg"


 Die Veranstaltungen in der Datenbank auflisten (mit ihren IDs):

    db-export.pl --list


 Die Daten einer Veranstaltung über ihre ID aus der Datenbank exportieren:

    db-export.pl 4711


 Löschen einer Veranstaltung aus der Datenbank (über Dateiname oder ID):

    db-sync.pl --delete \
	"2012-04-22 Steinbach ÖTSV + OSK.cfg"
    db-sync.pl --delete-id 4711


Reihung in der Jahreswertung
----------------------------

Fahrer werden zunächst anhand ihrer Gesamtpunkteanzahl gereiht, wobei die
Punkte aus Streichresultaten abgezogen sind.

Bei gleichem Punktestand werden alle erzielten Ergebnisse inklusive der
Streichresultate verglichen.  Der Fahrer mit mehr guten Platzierungen, also mit
mehr ersten Plätzen, oder mit mehr zweiten Plätzen bei gleicher Anzahl erster
Plätze, usw., gewinnt.

Danach gewinnt der Fahrer mit mehr Streichpunkten.

Wenn danach immer noch Gleichstand herrscht, werden beide Fahrer momentan
gleich gereiht.


WeasyPrint
==========

WeasyPrint Wird verwendet, um am Server HTML nach PDF zu konvertieren.
Weasyprint ist zwar speziell für die Ergebnislisten mit ihren großen Tabellen
sehr langsam, dafür erzeugt es aber einen ordentlichen Seitenumbruch, was z.B.
WebKit-basierte Lösungen wie wkhtmltopdf nur sehr mangelhaft beherrschen.

  yum install weasyprint


Lizenz
------

Dieser Text und die Programme stehen under der GNU Affero General Public License
Version 3, http://www.gnu.org/licenses/agpl-3.0.html.


Referenzen
----------

[1] http://www.ortwinsann.de/trialtool/
